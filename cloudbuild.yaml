# This file defines the steps for Google Cloud Build.
# It tells Cloud Build how to build your backend container and deploy it to Cloud Run.

steps:
  # Step 1: Build the Docker image
  # This step runs the 'docker build' command.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/calendar-optimizer-backend:$COMMIT_SHA'
      - './backend' # Specifies that the Dockerfile is in the 'backend' directory
    id: 'Build'

  # Step 2: Push the Docker image to Google Artifact Registry
  # This is the container warehouse for your project.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/calendar-optimizer-backend:$COMMIT_SHA'
    id: 'Push'

  # Step 3: Deploy the new image to Cloud Run
  # This step uses the gcloud CLI to update your service.
  - name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'calendar-optimizer-backend' # The name of your Cloud Run service
      - '--image'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/calendar-optimizer-backend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
    id: 'Deploy'

# This tells Cloud Build which images to make available for other steps or for final deployment.
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/calendar-optimizer-backend:$COMMIT_SHA'
